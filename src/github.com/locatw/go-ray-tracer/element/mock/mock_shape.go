// Code generated by MockGen. DO NOT EDIT.
// Source: src\github.com\locatw\go-ray-tracer\element\shape.go

// Package mock_element is a generated GoMock package.
package mock_element

import (
	gomock "github.com/golang/mock/gomock"
	element "github.com/locatw/go-ray-tracer/element"
	reflect "reflect"
)

// MockShape is a mock of Shape interface
type MockShape struct {
	ctrl     *gomock.Controller
	recorder *MockShapeMockRecorder
}

// MockShapeMockRecorder is the mock recorder for MockShape
type MockShapeMockRecorder struct {
	mock *MockShape
}

// NewMockShape creates a new mock instance
func NewMockShape(ctrl *gomock.Controller) *MockShape {
	mock := &MockShape{ctrl: ctrl}
	mock.recorder = &MockShapeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockShape) EXPECT() *MockShapeMockRecorder {
	return m.recorder
}

// Intersect mocks base method
func (m *MockShape) Intersect(ray element.Ray) *element.HitInfo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Intersect", ray)
	ret0, _ := ret[0].(*element.HitInfo)
	return ret0
}

// Intersect indicates an expected call of Intersect
func (mr *MockShapeMockRecorder) Intersect(ray interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Intersect", reflect.TypeOf((*MockShape)(nil).Intersect), ray)
}

// GetMaterial mocks base method
func (m *MockShape) GetMaterial() element.Material {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaterial")
	ret0, _ := ret[0].(element.Material)
	return ret0
}

// GetMaterial indicates an expected call of GetMaterial
func (mr *MockShapeMockRecorder) GetMaterial() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaterial", reflect.TypeOf((*MockShape)(nil).GetMaterial))
}
